From 98d983e4bc4bd5bd781b7f42314eb47561480ee4 Mon Sep 17 00:00:00 2001
From: Eter Lu <i@ziip.ink>
Date: Thu, 23 Feb 2023 18:48:29 +0800
Subject: [PATCH] Add proxy support for account authentication


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 469fe0e1..01175d20 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -275,4 +275,29 @@ public interface ProxyConfig
      * @return the configured limit
      */
     int getPluginChannelNameLimit();
+
+    //
+    // Cryooo Options
+    //
+
+    /**
+     * Whether proxy is used for account authentication.
+     *
+     * @return whether proxy is used for account authentication.
+     */
+    boolean isUseProxy();
+
+    /**
+     * Gets the hostname of proxy
+     *
+     * @return the hostname of proxy
+     */
+    String getProxyHostname();
+
+    /**
+     * Gets the port of proxy
+     *
+     * @return the port of proxy
+     */
+    int getProxyPort();
 }
diff --git a/proxy/pom.xml b/proxy/pom.xml
index 2006e3df..e9e94d8f 100644
--- a/proxy/pom.xml
+++ b/proxy/pom.xml
@@ -50,6 +50,14 @@
             <classifier>osx-x86_64</classifier>
         </dependency>
         <!-- Waterfall End -->
+        <!-- Cryoo Start - add proxy handler -->
+        <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-handler-proxy</artifactId>
+            <version>${netty.version}</version>
+            <scope>compile</scope>
+        </dependency>
+        <!-- Waterfall End -->
         <dependency>
             <groupId>io.netty</groupId>
             <artifactId>netty-handler</artifactId>
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index da0efa36..1951382d 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -62,6 +62,13 @@ public class WaterfallConfiguration extends Configuration {
      */
     private int pluginChannelNameLimit = 128;
 
+    /**
+     * Proxy relevant settings.
+     */
+    private boolean useProxy = false;
+    private String proxyHostname = "";
+    private int proxyPort = -1;
+
     @Override
     public void load() {
         super.load();
@@ -77,6 +84,10 @@ public class WaterfallConfiguration extends Configuration {
         disableTabListRewrite = config.getBoolean("disable_tab_list_rewrite", disableTabListRewrite);
         pluginChannelLimit = config.getInt("registered_plugin_channels_limit", pluginChannelLimit);
         pluginChannelNameLimit = config.getInt("plugin_channel_name_limit", pluginChannelNameLimit);
+        // Proxy settings
+        useProxy = config.getBoolean("proxy.use_proxy", useProxy);
+        proxyHostname =config.getString("proxy.proxy_hostname", proxyHostname);
+        proxyPort = config.getInt("proxy.proxy_port", proxyPort);
     }
 
     @Override
@@ -123,4 +134,19 @@ public class WaterfallConfiguration extends Configuration {
     public int getPluginChannelNameLimit() {
         return pluginChannelNameLimit;
     }
+
+    @Override
+    public boolean isUseProxy() {
+        return useProxy;
+    }
+
+    @Override
+    public String getProxyHostname() {
+        return proxyHostname;
+    }
+
+    @Override
+    public int getProxyPort() {
+        return proxyPort;
+    }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/http/HttpInitializer.java b/proxy/src/main/java/net/md_5/bungee/http/HttpInitializer.java
index 37657c4c..a2e617fe 100644
--- a/proxy/src/main/java/net/md_5/bungee/http/HttpInitializer.java
+++ b/proxy/src/main/java/net/md_5/bungee/http/HttpInitializer.java
@@ -6,10 +6,12 @@ import io.netty.handler.codec.http.HttpClientCodec;
 import io.netty.handler.ssl.SslContextBuilder;
 import io.netty.handler.ssl.SslHandler;
 import io.netty.handler.timeout.ReadTimeoutHandler;
+import io.netty.handler.proxy.HttpProxyHandler;
+import java.net.InetSocketAddress;
 import java.util.concurrent.TimeUnit;
 import javax.net.ssl.SSLEngine;
 import lombok.RequiredArgsConstructor;
-import net.md_5.bungee.api.Callback;
+import net.md_5.bungee.api.*;
 
 @RequiredArgsConstructor
 public class HttpInitializer extends ChannelInitializer<Channel>
@@ -23,6 +25,9 @@ public class HttpInitializer extends ChannelInitializer<Channel>
     @Override
     protected void initChannel(Channel ch) throws Exception
     {
+        if( ProxyServer.getInstance().getConfig().isUseProxy() ) {
+            ch.pipeline().addLast( "proxyServer", new HttpProxyHandler( new InetSocketAddress( ProxyServer.getInstance().getConfig().getProxyHostname(), ProxyServer.getInstance().getConfig().getProxyPort() ) ) );
+        }
         ch.pipeline().addLast( "timeout", new ReadTimeoutHandler( HttpClient.TIMEOUT, TimeUnit.MILLISECONDS ) );
         if ( ssl )
         {
-- 
2.39.2.windows.1

